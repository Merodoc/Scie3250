(1, 2, 3)
x <- (1, 2, 3)
x <- (1:3)
y <- (1:3)
cbind(x,y)
z <- cbind(x, y)
z[1]
z[1,1]
z[1,]
sum(z[1,])
BTm
library("BradleyTerry2")
BTm
z[]
z[1]
z[1,]
z[1,0]
z[1][1]
z[1]
z[1,]
z[,1]
z[1,1]
sum(z[1,1])
sum(z[1])
sum(z[1,])
sum(z[1,1])
sum(z[1,2])
sum(z[1,])
sum(z[2,])
setwd("C:/Users/Rowan/Scie3250")
library(BradTerTest1.R)
citeModel
BradTer(z, x, y)
BTm(cbind(win1, win2), journal1, journal2, data = citations.sf)
data("citations", package = "BradleyTerry2")
citations
citations.sf <- countsToBinomial(citations)
citations.sf
names(citations.sf)[1:2] <- c("journal1, journal2")
citations.sf
BTm(cbind(win1, win2), journal1, journal2, data = citations.sf)
names(citations.sf)[1:2] <- c("journal1", "journal2")
BTm(cbind(win1, win2), journal1, journal2, data = citations.sf)
names(citations.sf)[1:2] <- c("journal1", "journal2")
print(ans)
print(ans2)
print(ans2)
print(ans1)
print(ans1)
for (i in (1:K)) {
if (outcome[i, 1] < outcome[i, 2])
ans2 <- c(ans2, sum(outcome[i,])*log(2* p[i]))
print(ans2)
}
K <- length(unique(citations.sf$journal1))
K
K
p <- c(1:K)/K
p = c(1:K)/K
p = c(1:K)
K
ans1 <- c()
ans2 <- c()
p = c(1:K)
for (i in (1:K)) {
ans1 <-c(ans1, outcome[i,1]*log(p[i]))
print(ans1)
}
for (i in (1:K)) {
if (outcome[i, 1] < outcome[i, 2])
ans2 <- c(ans2, sum(outcome[i,])*log(2* p[i]))
print(ans2)
}
ans <- ans1 - ans2
print(ans)
BradTer <- function(outcome, player1, player2) {
# outcome <- matrix of win for/against outcomes
# player 1 and 2 corresponding to the winner/loser of outcome columns
K <- length(unique(player1))
K
ans1 <- c()
ans2 <- c()
p = c(1:K)
for (i in (1:K)) {
ans1 <-c(ans1, outcome[i,1]*log(p[i]))
print(ans1)
}
for (i in (1:K)) {
if (outcome[i, 1] < outcome[i, 2])
ans2 <- c(ans2, sum(outcome[i,])*log(2* p[i]))
print(ans2)
}
ans <- ans1 - ans2
print(ans)
}
data("citations", package = "BradleyTerry2")
citations.sf <- countsToBinomial(citations)
names(citations.sf)[1:2] <- c("journal1", "journal2")
BradTer(cbind(citations.sf$win1,citations.sf$win2), citations.sf$journal1, citations.sf$journal2)
BTm(cbind(win1, win2), journal1, journal2, data = citations.sf)
